PI Master settings
Curled from a main server - whole log grepped, or do we have one file per server?

Then filename = hostname.plist
Then plist format?

Hostname:PI Recipient(s):Alerts Recipient(s):SendPILogs:Disable?:Uninstall?:

NAME=`scutil --get ComputerName`

hostname.plist example - 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>EveryDay</key>
	<false/>
	<key>PI</key>
	<string>ben@trmacs.com</string>
	<key>PIEnabled</key>
	<true/>
	<key>SendPILogs</key>
	<true/>
	<key>alerts</key>
	<string>ben@trmacs.com</string>
</dict>
</plist>


hostname.plist
Keys:			Type		Default			Function
PIEnabled - 	boolean		True			True = run, False = unload all but checking
PI - 			String 		ben@trmacs.com	Email addresses, comma separated for recipients of Private Eyes
alerts			String		ben@trmacs.com	Email addresses, comma separated for non PI Alerts (SMART check, etcâ€¦)
SendPILogs		boolean		True			True e-mail logs, false - generate, but do not send.
EveryDay		boolean		False			Send PI Logs everyday?  Overrides default weekend behavior.


settings.plist (not imported from hostname.plist)
Keys:			Type		Function
IsWeekday		boolean		If Saturday or Sunday False. Generated locally.

Example settings.plist - 


pi-checkin.sh
Curl down hostname.plist - hash and store for comparison to prevent constant downloading. - see inventory postflight.
Generate settings.plist
Read keys from hostname.plist	PIEnabled, PI, alerts, SendPILogs, EveryDay, PlistBuddy into settings.plist
Read IsWeekday generated by pi-schedule.sh

settings.plist contains both server provided and local settings.


- PIEnabled.  If true, continue.  If False, unload com.trmacs.pinotify.plist


Set timing from control PList
Weekend toggle active? - How to let the computer know to unload com.trmacs.pi-schedule.plist
	Set IsWeekend to True.
	
	Or - do the Send logic in a script - and then output to local.plist = send logs T/F?
	local.plist generated from hostname.plist - local is what PI looks at?
	
	
	
Control pi-schedule plist somehow, or just options from the set script?
Control the launchd somehow?

Logs sent - 	SendPILogs = True AND is Weekday = True OR SendPILogs = True AND EveryDay = True
No Logs - 		SendPILogs = False OR is Weekday = False AND EveryDay = False

check in as per munki's run.  Grab from munki. - has python supervisor.  Will not work.

Weekend check, runs Saturday at 1:00 AM, Monday 4 AM, and at load.


------------------------------------------------------------------------------------------

Local Machine Files

Configuration Files
hostname.plist						Contains the info curled from the web server
com.trmacs.pi-checkin.plist			Launchd to schedule contacting the server. Hourly?
pi-checkin.sh						New script to curl the hostname.plist & run the show.

pi-schedule.sh						Inputs IsWeekday T/F to settings.plist
com.trmacs.pi-schedule.plist		Schedules the running of pi-schedule. Runs at Load, Monday and Saturday.
settings.plist						local plist.  Combination of hostname.plist & IsWeekday from pi-schedule

PI logging
drivecheck.sh						Checks on the drives
PInotify.sh							Script called by com.trmacs.pinotify.plist that calls subsequent scripts and manipulates the generated logs.
trdaily.sh							CCC logs, hostname etc, user specific scripts.
trsyscheck.sh						Parsed system logs.
verschck.sh							polls /Library/Scripts/trmacs for vers variable and includes in trdaily.sh
com.trmacs.pinotify.plist			launchd that calls PInotify.  Runs daily at 9:00 PM.
trlogrot.sh							log rotation for files in /Library/Logs/com.trmacs/
com.trmacs.trlogrot.plist			calls trlogrot.sh every day at 3:20 AM.


Web Server files

hostname.plist						Curled by the computer named "hostname" every hour or so.
default.plist						default settings for hostname.plist if hostname.plist cannot be found.

------------------------------------------------------------------------------------------

Done:
write com.trmacs.pi-schedule.plist
pi-checkin.sh
Update pi-schedule.sh
Create default.plist
Check hostname generation and what is sent by each host. - No Spaces in Host name.
write com.trmacs.pi-checkin.plist
Update PInotify.sh to pull info from hostname.plist 


To Do:
Update TRDaily to possibly pull the tail of the checkin logs?
Add error checking in case of a corrput/partially downloaded plist.  
	Something like if PI key is null, then set to ben@trmacs, if PIEnabled = null, then set to true.
	
md5 of the file on the server - compare it with the local previously downloaded hostname.plist.  Do not delete hostname.plist.
Where to store md5?

store md5 as a string in settings?
if md5 does not match, then download.
If remote is null, or md5 is the same, continue with settings, do not change anything.
need to store md5 of the remote file to have it match what is downloaded so we do not get corrupt files.
hostname.md5.plist with one string, the md5 of the hostname.plist.

1. curl hostname.plist
2. curl hostname.md5.plist
3. /usr/libexec/PlistBuddy -c  "Print hash" /Library/Scripts/trmacs/"$NAME".md5.plist
3. compare hash saved in hostname.md5.plist to md5 of hostname.plist.
If they are the same, continue, if not report error, re-download hostname.plist, and compare again.
4.  If still not the same, continue with existing settings.plist
5.  if both md5's match, then compare that md5 to the stored md5 in settings.plist.  If the same, continue with settings.plist.
6.  If the saved md5 does not match the one stored in settings.plist - apply settings from hostname.plist (what happens every time now)
7.  Then store the new md5 in the updated settings.plist.


Need to figure out the easiest way to upgrade existing versions - possibly have the pre/post flight on the installers create / add the necessary parts to the settings.plist.